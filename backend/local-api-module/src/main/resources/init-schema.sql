CREATE TABLE ads
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    estimation INTEGER,
    link       VARCHAR(255)                            NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    id_cost    BIGINT                                  NOT NULL,
    id_item    BIGINT                                  NOT NULL,
    CONSTRAINT pk_ads PRIMARY KEY (id)
);

CREATE TABLE api_keys
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key        VARCHAR(1000)                           NOT NULL,
    client_id  VARCHAR(255),
    type       VARCHAR(255)                            NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    id_user    BIGINT                                  NOT NULL,
    CONSTRAINT pk_api_keys PRIMARY KEY (id)
);

CREATE TABLE competitors
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_user_competitor BIGINT                                  NOT NULL,
    id_user            BIGINT                                  NOT NULL,
    CONSTRAINT pk_competitors PRIMARY KEY (id)
);

CREATE TABLE costs
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title       VARCHAR(255)                            NOT NULL,
    description VARCHAR(255)                            NOT NULL,
    type        VARCHAR(255)                            NOT NULL,
    amount      DOUBLE PRECISION                        NOT NULL,
    id_purchase BIGINT                                  NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_costs PRIMARY KEY (id)
);

CREATE TABLE items
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title       VARCHAR(255)                            NOT NULL,
    description VARCHAR(500),
    first_price DOUBLE PRECISION,
    id_user     BIGINT                                  NOT NULL,
    category    VARCHAR(255),
    mp_link     VARCHAR(255),
    is_active   BOOLEAN                                 NOT NULL,
    is_draft    BOOLEAN                                 NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_items PRIMARY KEY (id)
);

CREATE TABLE jwts
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token   VARCHAR(255)                            NOT NULL,
    type    VARCHAR(255)                            NOT NULL,
    revoked BOOLEAN                                 NOT NULL,
    expired BOOLEAN                                 NOT NULL,
    user_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_jwts PRIMARY KEY (id)
);

CREATE TABLE messages
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text         VARCHAR(255)                            NOT NULL,
    id_user_from BIGINT                                  NOT NULL,
    id_user_to   BIGINT                                  NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_messages PRIMARY KEY (id)
);

CREATE TABLE orders
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_item    BIGINT                                  NOT NULL,
    price      DOUBLE PRECISION                        NOT NULL,
    taked_at   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE permissions
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE price_history
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    old_price  DOUBLE PRECISION                        NOT NULL,
    new_price  DOUBLE PRECISION                        NOT NULL,
    id_item    BIGINT                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_price_history PRIMARY KEY (id)
);

CREATE TABLE purchase_items
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    count       INTEGER                                 NOT NULL,
    id_purchase BIGINT                                  NOT NULL,
    id_item     BIGINT                                  NOT NULL,
    CONSTRAINT pk_purchase_items PRIMARY KEY (id)
);

CREATE TABLE purchases
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_user    BIGINT                                  NOT NULL,
    cost       DOUBLE PRECISION                        NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_purchases PRIMARY KEY (id)
);

CREATE TABLE role_permission
(
    permission_id BIGINT NOT NULL,
    role_id       BIGINT NOT NULL,
    CONSTRAINT pk_role_permission PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE roles
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE subscriptions
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    price       DOUBLE PRECISION                        NOT NULL,
    is_active   BOOLEAN                                 NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_subscriptions PRIMARY KEY (id)
);

CREATE TABLE todo_tasks
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title        VARCHAR(255)                            NOT NULL,
    description  VARCHAR(500)                            NOT NULL,
    due_date     date,
    is_completed BOOLEAN                                 NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    id_user      BIGINT                                  NOT NULL,
    CONSTRAINT pk_todo_tasks PRIMARY KEY (id)
);

CREATE TABLE user_preferences
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key     VARCHAR(255)                            NOT NULL,
    value   VARCHAR(255)                            NOT NULL,
    id_user BIGINT                                  NOT NULL,
    CONSTRAINT pk_user_preferences PRIMARY KEY (id)
);

CREATE TABLE user_subscription
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_user         BIGINT                                  NOT NULL,
    id_subscription BIGINT                                  NOT NULL,
    start_date      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_date        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_user_subscription PRIMARY KEY (id)
);

CREATE TABLE users
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email       VARCHAR(255)                            NOT NULL,
    password    VARCHAR(255)                            NOT NULL,
    first_name  VARCHAR(255)                            NOT NULL,
    second_name VARCHAR(255),
    phone_num   VARCHAR(14),
    is_active   BOOLEAN                                 NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    role_id     BIGINT                                  NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE wallet_transactions
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    amount      DOUBLE PRECISION                        NOT NULL,
    type        VARCHAR(255),
    description VARCHAR(255)                            NOT NULL,
    impl_date   TIMESTAMP WITHOUT TIME ZONE,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    id_wallet   BIGINT                                  NOT NULL,
    CONSTRAINT pk_wallet_transactions PRIMARY KEY (id)
);

CREATE TABLE wallets
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    balance DOUBLE PRECISION                        NOT NULL,
    CONSTRAINT pk_wallets PRIMARY KEY (id)
);

ALTER TABLE api_keys
    ADD CONSTRAINT uc_api_keys_client UNIQUE (client_id);

ALTER TABLE api_keys
    ADD CONSTRAINT uc_api_keys_key UNIQUE (key);

ALTER TABLE jwts
    ADD CONSTRAINT uc_jwts_token UNIQUE (token);

ALTER TABLE roles
    ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE subscriptions
    ADD CONSTRAINT uc_subscriptions_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_users_phone_num UNIQUE (phone_num);

ALTER TABLE ads
    ADD CONSTRAINT FK_ADS_ON_ID_COST FOREIGN KEY (id_cost) REFERENCES costs (id);

ALTER TABLE ads
    ADD CONSTRAINT FK_ADS_ON_ID_ITEM FOREIGN KEY (id_item) REFERENCES items (id);

ALTER TABLE api_keys
    ADD CONSTRAINT FK_API_KEYS_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE competitors
    ADD CONSTRAINT FK_COMPETITORS_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE competitors
    ADD CONSTRAINT FK_COMPETITORS_ON_ID_USER_COMPETITOR FOREIGN KEY (id_user_competitor) REFERENCES users (id);

ALTER TABLE costs
    ADD CONSTRAINT FK_COSTS_ON_ID_PURCHASE FOREIGN KEY (id_purchase) REFERENCES purchases (id);

ALTER TABLE items
    ADD CONSTRAINT FK_ITEMS_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE jwts
    ADD CONSTRAINT FK_JWTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE messages
    ADD CONSTRAINT FK_MESSAGES_ON_ID_USER_FROM FOREIGN KEY (id_user_from) REFERENCES users (id);

ALTER TABLE messages
    ADD CONSTRAINT FK_MESSAGES_ON_ID_USER_TO FOREIGN KEY (id_user_to) REFERENCES users (id);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_ID_ITEM FOREIGN KEY (id_item) REFERENCES items (id);

ALTER TABLE price_history
    ADD CONSTRAINT FK_PRICE_HISTORY_ON_ID_ITEM FOREIGN KEY (id_item) REFERENCES items (id);

ALTER TABLE purchases
    ADD CONSTRAINT FK_PURCHASES_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE purchase_items
    ADD CONSTRAINT FK_PURCHASE_ITEMS_ON_ID_ITEM FOREIGN KEY (id_item) REFERENCES items (id);

ALTER TABLE purchase_items
    ADD CONSTRAINT FK_PURCHASE_ITEMS_ON_ID_PURCHASE FOREIGN KEY (id_purchase) REFERENCES purchases (id);

ALTER TABLE todo_tasks
    ADD CONSTRAINT FK_TODO_TASKS_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ROLE FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_preferences
    ADD CONSTRAINT FK_USER_PREFERENCES_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE user_subscription
    ADD CONSTRAINT FK_USER_SUBSCRIPTION_ON_ID_SUBSCRIPTION FOREIGN KEY (id_subscription) REFERENCES subscriptions (id);

ALTER TABLE user_subscription
    ADD CONSTRAINT FK_USER_SUBSCRIPTION_ON_ID_USER FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE wallet_transactions
    ADD CONSTRAINT FK_WALLET_TRANSACTIONS_ON_ID_WALLET FOREIGN KEY (id_wallet) REFERENCES wallets (id);

ALTER TABLE role_permission
    ADD CONSTRAINT fk_rolper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE role_permission
    ADD CONSTRAINT fk_rolper_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

insert into roles(name) values ('USER');
select * from roles;

insert into items(title, id_user, is_active, created_at, is_draft) VALUES ('Товар с черновика', 1, true, NOW(), true);
insert into items(title, id_user, is_active, created_at, is_draft) VALUES ('Товар не из черновика', 1, true, NOW(), false);